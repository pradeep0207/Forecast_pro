{"ast":null,"code":"/*\r\nimport React from 'react';\r\nimport { Grid, Typography } from '@mui/material';\r\nimport DailyForecastItem from './DailyForecastItem';\r\nimport ErrorBox from '../../Reusable/ErrorBox';\r\nimport Layout from '../../Reusable/Layout';\r\n\r\nconst DailyForecast = ({ data, forecastList }) => {\r\n  const noDataProvided =\r\n    !data ||\r\n    !forecastList ||\r\n    Object.keys(data).length === 0 ||\r\n    data.cod === '404' ||\r\n    forecastList.cod === '404';\r\n\r\n  let subHeader;\r\n\r\n  if (!noDataProvided && forecastList.length > 0)\r\n    subHeader = (\r\n      <Typography\r\n        variant=\"h5\"\r\n        component=\"h5\"\r\n        sx={{\r\n          fontSize: { xs: '10px', sm: '12px' },\r\n          textAlign: 'center',\r\n          lineHeight: 1,\r\n          color: '#04C4E0',\r\n          fontFamily: 'Roboto Condensed',\r\n          marginBottom: '1rem',\r\n        }}\r\n      >\r\n        {forecastList.length === 1\r\n          ? '1 available forecast'\r\n          : `${forecastList.length} available forecasts`}\r\n      </Typography>\r\n    );\r\n\r\n  let content;\r\n\r\n  if (noDataProvided) content = <ErrorBox flex=\"1\" type=\"error\" />;\r\n\r\n  if (!noDataProvided && forecastList.length > 0)\r\n    content = (\r\n      <Grid\r\n        item\r\n        container\r\n        xs={12}\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          width: 'fit-content',\r\n        }}\r\n        spacing=\"4px\"\r\n      >\r\n        {forecastList.map((item, idx) => (\r\n          <Grid\r\n            key={idx}\r\n            item\r\n            xs={4}\r\n            sm={2}\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            sx={{\r\n              marginBottom: { xs: '1rem', sm: '0' },\r\n            }}\r\n          >\r\n            <DailyForecastItem item={item} data={data} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n\r\n  if (!noDataProvided && forecastList && forecastList.length === 0)\r\n    subHeader = (\r\n      <ErrorBox\r\n        flex=\"1\"\r\n        type=\"info\"\r\n        margin=\"2rem auto\"\r\n        errorMessage=\"No available forecasts for tonight.\"\r\n      />\r\n    );\r\n\r\n  return (\r\n    <Layout\r\n      title=\"TODAY'S FORECAST\"\r\n      content={content}\r\n      sectionSubHeader={subHeader}\r\n      sx={{ marginTop: '2.9rem' }}\r\n      mb=\"0.3rem\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default DailyForecast;\r\n*/","map":{"version":3,"names":[],"sources":["C:/Users/rohit/OneDrive/Desktop/New folder/the-weather-forecasting/src/components/TodayWeather/Forecast/DailyForecast.js"],"sourcesContent":["/*\r\nimport React from 'react';\r\nimport { Grid, Typography } from '@mui/material';\r\nimport DailyForecastItem from './DailyForecastItem';\r\nimport ErrorBox from '../../Reusable/ErrorBox';\r\nimport Layout from '../../Reusable/Layout';\r\n\r\nconst DailyForecast = ({ data, forecastList }) => {\r\n  const noDataProvided =\r\n    !data ||\r\n    !forecastList ||\r\n    Object.keys(data).length === 0 ||\r\n    data.cod === '404' ||\r\n    forecastList.cod === '404';\r\n\r\n  let subHeader;\r\n\r\n  if (!noDataProvided && forecastList.length > 0)\r\n    subHeader = (\r\n      <Typography\r\n        variant=\"h5\"\r\n        component=\"h5\"\r\n        sx={{\r\n          fontSize: { xs: '10px', sm: '12px' },\r\n          textAlign: 'center',\r\n          lineHeight: 1,\r\n          color: '#04C4E0',\r\n          fontFamily: 'Roboto Condensed',\r\n          marginBottom: '1rem',\r\n        }}\r\n      >\r\n        {forecastList.length === 1\r\n          ? '1 available forecast'\r\n          : `${forecastList.length} available forecasts`}\r\n      </Typography>\r\n    );\r\n\r\n  let content;\r\n\r\n  if (noDataProvided) content = <ErrorBox flex=\"1\" type=\"error\" />;\r\n\r\n  if (!noDataProvided && forecastList.length > 0)\r\n    content = (\r\n      <Grid\r\n        item\r\n        container\r\n        xs={12}\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          width: 'fit-content',\r\n        }}\r\n        spacing=\"4px\"\r\n      >\r\n        {forecastList.map((item, idx) => (\r\n          <Grid\r\n            key={idx}\r\n            item\r\n            xs={4}\r\n            sm={2}\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            sx={{\r\n              marginBottom: { xs: '1rem', sm: '0' },\r\n            }}\r\n          >\r\n            <DailyForecastItem item={item} data={data} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n\r\n  if (!noDataProvided && forecastList && forecastList.length === 0)\r\n    subHeader = (\r\n      <ErrorBox\r\n        flex=\"1\"\r\n        type=\"info\"\r\n        margin=\"2rem auto\"\r\n        errorMessage=\"No available forecasts for tonight.\"\r\n      />\r\n    );\r\n\r\n  return (\r\n    <Layout\r\n      title=\"TODAY'S FORECAST\"\r\n      content={content}\r\n      sectionSubHeader={subHeader}\r\n      sx={{ marginTop: '2.9rem' }}\r\n      mb=\"0.3rem\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default DailyForecast;\r\n*/\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}