{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\OneDrive\\\\Desktop\\\\New folder\\\\the-weather-forecasting\\\\src\\\\components\\\\TodayWeather\\\\Details\\\\Details.js\";\nimport React from 'react';\nimport { Grid } from '@mui/material';\nimport { getDayMonthFromDate } from '../../../utilities/DatetimeUtils';\nimport { weatherIcon } from '../../../utilities/IconsUtils';\nimport ErrorBox from '../../Reusable/ErrorBox';\nimport CityDateDetail from './CityDateDetail';\nimport TemperatureWeatherDetail from './TemperatureWeatherDetail';\nimport WeatherIconDetail from './WeatherIconDetail';\nimport Layout from '../../Reusable/Layout';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst dayMonth = getDayMonthFromDate();\nconst Details = ({\n  data\n}) => {\n  const noDataProvided = !data || Object.keys(data).length === 0 || data.cod === '404';\n  let content = /*#__PURE__*/_jsxDEV(ErrorBox, {\n    flex: \"1\",\n    type: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 17\n  }, this);\n  if (!noDataProvided) content = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      sx: {\n        height: '80px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CityDateDetail, {\n        city: data.city,\n        date: dayMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      sx: {\n        height: '80px'\n      },\n      children: /*#__PURE__*/_jsxDEV(TemperatureWeatherDetail, {\n        temperature: data.main.temp,\n        description: data.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '80px'\n      },\n      children: /*#__PURE__*/_jsxDEV(WeatherIconDetail, {\n        src: weatherIcon(`${data.weather[0].icon}.png`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"CURRENT WEATHER\",\n    content: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n_c = Details;\nexport default Details;\nvar _c;\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"names":["React","Grid","getDayMonthFromDate","weatherIcon","ErrorBox","CityDateDetail","TemperatureWeatherDetail","WeatherIconDetail","Layout","jsxDEV","_jsxDEV","Fragment","_Fragment","dayMonth","Details","data","noDataProvided","Object","keys","length","cod","content","flex","type","fileName","_jsxFileName","lineNumber","columnNumber","children","item","xs","sx","height","city","date","temperature","main","temp","description","weather","display","justifyContent","alignItems","src","icon","title","_c","$RefreshReg$"],"sources":["C:/Users/rohit/OneDrive/Desktop/New folder/the-weather-forecasting/src/components/TodayWeather/Details/Details.js"],"sourcesContent":["import React from 'react';\r\nimport { Grid } from '@mui/material';\r\nimport { getDayMonthFromDate } from '../../../utilities/DatetimeUtils';\r\nimport { weatherIcon } from '../../../utilities/IconsUtils';\r\nimport ErrorBox from '../../Reusable/ErrorBox';\r\nimport CityDateDetail from './CityDateDetail';\r\nimport TemperatureWeatherDetail from './TemperatureWeatherDetail';\r\nimport WeatherIconDetail from './WeatherIconDetail';\r\nimport Layout from '../../Reusable/Layout';\r\n\r\nconst dayMonth = getDayMonthFromDate();\r\n\r\nconst Details = ({ data }) => {\r\n  const noDataProvided =\r\n    !data || Object.keys(data).length === 0 || data.cod === '404';\r\n\r\n  let content = <ErrorBox flex=\"1\" type=\"error\" />;\r\n\r\n  if (!noDataProvided)\r\n    content = (\r\n      <>\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          sx={{\r\n            height: '80px',\r\n          }}\r\n        >\r\n          <CityDateDetail city={data.city} date={dayMonth} />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          sx={{\r\n            height: '80px',\r\n          }}\r\n        >\r\n          <TemperatureWeatherDetail\r\n            temperature={data.main.temp}\r\n            description={data.weather[0].description}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            height: '80px',\r\n          }}\r\n        >\r\n          <WeatherIconDetail src={weatherIcon(`${data.weather[0].icon}.png`)} />\r\n        </Grid>\r\n      </>\r\n    );\r\n\r\n  return <Layout title=\"CURRENT WEATHER\" content={content} />;\r\n};\r\n\r\nexport default Details;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}