{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\OneDrive\\\\Desktop\\\\react project\\\\the-weather-forecasting\\\\src\\\\components\\\\Search\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AsyncPaginate } from 'react-select-async-paginate';\nimport { fetchCities } from '../../api/OpenWeatherService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  onSearchChange\n}) => {\n  _s();\n  const [searchValue, setSearchValue] = useState(null);\n  const loadOptions = async inputValue => {\n    const citiesList = await fetchCities(inputValue);\n    return {\n      options: citiesList.data.map(city => {\n        return {\n          value: `${city.latitude} ${city.longitude}`,\n          label: `${city.name}, ${city.countryCode}`\n        };\n      })\n    };\n  };\n  /*\r\n    const onChangeHandler = (enteredData) => {\r\n      setSearchValue(enteredData);\r\n      onSearchChange(enteredData);\r\n    };\r\n  */\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"Search for cities\",\n    debounceTimeout: 600,\n    value: searchValue\n    // onChange={onChangeHandler}\n    ,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"OrQVItsfaX3xDem37kG4cfR7N1k=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","AsyncPaginate","fetchCities","jsxDEV","_jsxDEV","Search","onSearchChange","_s","searchValue","setSearchValue","loadOptions","inputValue","citiesList","options","data","map","city","value","latitude","longitude","label","name","countryCode","placeholder","debounceTimeout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rohit/OneDrive/Desktop/react project/the-weather-forecasting/src/components/Search/Search.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { AsyncPaginate } from 'react-select-async-paginate';\r\nimport { fetchCities } from '../../api/OpenWeatherService';\r\n\r\nconst Search = ({ onSearchChange }) => {\r\n  const [searchValue, setSearchValue] = useState(null);\r\n\r\n  const loadOptions = async (inputValue) => {\r\n    const citiesList = await fetchCities(inputValue);\r\n\r\n    return {\r\n      options: citiesList.data.map((city) => {\r\n        return {\r\n          value: `${city.latitude} ${city.longitude}`,\r\n          label: `${city.name}, ${city.countryCode}`,\r\n        };\r\n      }),\r\n    };\r\n  };\r\n/*\r\n  const onChangeHandler = (enteredData) => {\r\n    setSearchValue(enteredData);\r\n    onSearchChange(enteredData);\r\n  };\r\n*/\r\n  return (\r\n    <AsyncPaginate\r\n      placeholder=\"Search for cities\"\r\n      debounceTimeout={600}\r\n      value={searchValue}\r\n      // onChange={onChangeHandler}\r\n      loadOptions={loadOptions}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,WAAW,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMU,WAAW,GAAG,MAAOC,UAAU,IAAK;IACxC,MAAMC,UAAU,GAAG,MAAMV,WAAW,CAACS,UAAU,CAAC;IAEhD,OAAO;MACLE,OAAO,EAAED,UAAU,CAACE,IAAI,CAACC,GAAG,CAAEC,IAAI,IAAK;QACrC,OAAO;UACLC,KAAK,EAAG,GAAED,IAAI,CAACE,QAAS,IAAGF,IAAI,CAACG,SAAU,EAAC;UAC3CC,KAAK,EAAG,GAAEJ,IAAI,CAACK,IAAK,KAAIL,IAAI,CAACM,WAAY;QAC3C,CAAC;MACH,CAAC;IACH,CAAC;EACH,CAAC;EACH;AACA;AACA;AACA;AACA;AACA;EACE,oBACElB,OAAA,CAACH,aAAa;IACZsB,WAAW,EAAC,mBAAmB;IAC/BC,eAAe,EAAE,GAAI;IACrBP,KAAK,EAAET;IACP;IAAA;IACAE,WAAW,EAAEA;EAAY;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEN,CAAC;AAACrB,EAAA,CA9BIF,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AAgCZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}